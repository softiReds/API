// <auto-generated />
using System;
using APIGestiónUsuarios.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIGestiónUsuarios.Migrations
{
    [DbContext(typeof(GestionUsuariosContext))]
    [Migration("20230906222851_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIGestiónUsuarios.Models.Rol", b =>
                {
                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RolNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Rol", (string)null);

                    b.HasData(
                        new
                        {
                            RolId = new Guid("08b6b52e-d0a8-49d5-9d35-ef1e9cfb05b9"),
                            RolNombre = "Desarrolador de Software"
                        },
                        new
                        {
                            RolId = new Guid("6d35e5f3-3ecf-42ae-9eb4-327a66b7a777"),
                            RolNombre = "Project Manager"
                        },
                        new
                        {
                            RolId = new Guid("633b52e0-237c-473b-8f8f-247ccff0bac6"),
                            RolNombre = "Consultor"
                        });
                });

            modelBuilder.Entity("APIGestiónUsuarios.Models.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioApellido")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UsuarioContraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UsuarioFechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UsuarioFechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            UsuarioId = new Guid("ae0b504f-a239-4b5c-b1a7-e334a9819435"),
                            UsuarioApellido = "Rojas",
                            UsuarioContraseña = "contrasenaSantiago",
                            UsuarioCorreoElectronico = "santiago@desarrollador.com",
                            UsuarioFechaActualizacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioFechaCreacion = new DateTime(2013, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioNombre = "Santiago"
                        },
                        new
                        {
                            UsuarioId = new Guid("5f103855-c839-4d4c-b5c4-90a466ea8b4f"),
                            UsuarioApellido = "Villamizar",
                            UsuarioContraseña = "contrasenaMateo",
                            UsuarioCorreoElectronico = "mateo@pm.com",
                            UsuarioFechaActualizacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioFechaCreacion = new DateTime(2014, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioNombre = "Mateo"
                        },
                        new
                        {
                            UsuarioId = new Guid("8f2e59c3-8d39-4494-9e2c-5c13c6585b26"),
                            UsuarioApellido = "Delgado",
                            UsuarioContraseña = "contrasenaXimena",
                            UsuarioCorreoElectronico = "ximena@consultor.com",
                            UsuarioFechaActualizacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioFechaCreacion = new DateTime(2010, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioNombre = "Ximena"
                        });
                });

            modelBuilder.Entity("APIGestiónUsuarios.Models.UsuarioRol", b =>
                {
                    b.Property<Guid>("UsuarioRolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsuarioRolId");

                    b.ToTable("UsuarioRol", (string)null);

                    b.HasData(
                        new
                        {
                            UsuarioRolId = new Guid("0dc39b94-303a-41a0-9fee-2f5f89e9ac24"),
                            RolId = new Guid("08b6b52e-d0a8-49d5-9d35-ef1e9cfb05b9"),
                            UsuarioId = new Guid("ae0b504f-a239-4b5c-b1a7-e334a9819435")
                        },
                        new
                        {
                            UsuarioRolId = new Guid("5ce64c6b-b8f6-41a1-b5ee-09147804724c"),
                            RolId = new Guid("6d35e5f3-3ecf-42ae-9eb4-327a66b7a777"),
                            UsuarioId = new Guid("5f103855-c839-4d4c-b5c4-90a466ea8b4f")
                        },
                        new
                        {
                            UsuarioRolId = new Guid("9502d17c-8a89-44a8-a4b6-e67cc78d811f"),
                            RolId = new Guid("633b52e0-237c-473b-8f8f-247ccff0bac6"),
                            UsuarioId = new Guid("8f2e59c3-8d39-4494-9e2c-5c13c6585b26")
                        });
                });

            modelBuilder.Entity("APIGestiónUsuarios.Models.Rol", b =>
                {
                    b.HasOne("APIGestiónUsuarios.Models.UsuarioRol", "UsuarioRol")
                        .WithOne("Rol")
                        .HasForeignKey("APIGestiónUsuarios.Models.Rol", "RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioRol");
                });

            modelBuilder.Entity("APIGestiónUsuarios.Models.Usuario", b =>
                {
                    b.HasOne("APIGestiónUsuarios.Models.UsuarioRol", "UsuarioRol")
                        .WithOne("Usuario")
                        .HasForeignKey("APIGestiónUsuarios.Models.Usuario", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioRol");
                });

            modelBuilder.Entity("APIGestiónUsuarios.Models.UsuarioRol", b =>
                {
                    b.Navigation("Rol")
                        .IsRequired();

                    b.Navigation("Usuario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
